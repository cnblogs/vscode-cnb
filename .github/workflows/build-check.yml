name: Build and check the code format

on:
    push:
        branches:
            - main
    pull_request_target:
        types:
            - opened
            - synchronize
            - reopened
            - edited
env:
    GITLAB_NPM_TOKEN: ${{secrets.GITLAB_NPM_TOKEN}}
jobs:
    build-check:
        permissions: read-all
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [16.x]
        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
            - name: 'Installing Dependencies'
              run: npm ci
            - name: 'Linting'
              run: npm run lint
            - name: 'Testing(Unit)'
              run: npm run test:unit
            - name: 'Building'
              run: ./build.sh "${{ secrets.OAUTHCLIENTID }}" "${{ secrets.OAUTHCLIENTSECRET }}"
            - name: 'Preparing VSCE'
              run: npm i -g vsce
            - name: 'Versioning'
              id: version
              run: echo "VERSION=1.0.0-beta.$(date +%s)" >> $GITHUB_OUTPUT
            - name: 'Packaging'
              id: packaging
              run: |
                  vsce package --pre-release --no-update-package-json --no-git-tag-version ${{ steps.version.outputs.VERSION }} && \
                  echo "PKG_NAME=vscode-cnb-${{ steps.version.outputs.VERSION }}.vsix" >> $GITHUB_OUTPUT
            - name: Uploading the Package
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ steps.packaging.outputs.PKG_NAME }}
                  path: ./${{ steps.packaging.outputs.PKG_NAME }}
